
import "android.graphics.drawable.ColorDrawable" 


--task(5000,function() 
function 提示(内容)
  Toast.makeText(this, 内容,Toast.LENGTH_SHORT).show()
end

function 检测更新(Github地址)
  packinfo=this.getPackageManager().getPackageInfo(this.getPackageName(),((1552294270/8/2-8392)/32/1250-25.25)/8-236)
  version=tostring(packinfo.versionName)
  versioncode=tostring(packinfo.versionCode)
  url=Github地址;
  function 过滤(content)
    版本名=content:match("【版本名】(.-)【版本名】")
    版本=content:match("【版本】(.-)【版本】")
    内容=content:match("【内容】(.-)【内容】")
    链接=content:match("【链接】(.-)【链接】")
    if(版本名==nil) then
      版本名="获取失败"
    end
    if(版本==nil) then
      版本="0"
    end
    if(内容==nil) then
      内容="获取失败"
    end
    if(链接==nil) then
      提示("服务器参数配置错误，请过段时间再次尝试")
    end

    if(版本 > versioncode) then


      function 动画测试()
        import "android.view.animation.*"--导入

        lay=
        {
          LinearLayout,
          orientation="vertical",
          layout_height="fill";
          layout_width="fill";
          gravity="center";
          id="dc",
          {
            LinearLayout,
            orientation="vertical",
            layout_height="match_parent";
            layout_width="80%w";
            id="a";

            { 
              LinearLayout,
              orientation="vertical", 
              -- gravity="center";
              {
                --火箭
                LinearLayout,
                layout_height="18%h";
                layout_width="80%w";
                layout_marginBottom='1dp';
                layout_gravity="center";
                background="#00000000",
                {
                  ImageView;
                  src="xhj2.png",
                  id="xhj";
                };
              },
            },


            {
              CardView;--卡片控件
              layout_marginBottom='0dp';--卡片边距
              layout_gravity='center';--重力属性
              elevation='0dp';--阴影属性
              layout_width='76%w';--卡片宽度
              CardBackgroundColor='#FFFFFFFF';--卡片背景颜色
              layout_height='50%h';--卡片高度
              radius='12dp';--卡片圆角

              {
                LinearLayout;
                orientation='vertical';--重力属性
                layout_width='76%w';--布局宽度
                layout_height='100dp';--布局高度
                background='drawable/ub.png';--布局背景颜色(或者图片路径)]]

                {
                  TextView;--文本控件
                  layout_width='76%w';--文本宽度
                  layout_height='50dp';--文本高度
                  gravity='center';--重力属性
                  textColor='#FFFFFFFF';--文字颜色
                  text='发现新版本';--显示的文字
                  textSize='24sp';--文字大小
                  layout_marginTop="15dp";
                };
                 {
                    TextView;
                    textSize="15sp";
                    layout_gravity='center';--重力属性
                    textColor="#FF888888";
                    text="版本："..version.."→"..版本名,
                  };
              };

               

              {
                LinearLayout;
                orientation='vertical';--重力属性
                layout_width='76%w';--布局宽度
                layout_height='70%h';--布局高度
                background='#FFFFFFFF';--布局背景颜色(或者图片路径)
                layout_marginTop="110dp";

                {
                  ScrollView,--纵向滚动
                  layout_width='68%w';--宽
                  layout_height='70%w';--高
                  layout_marginTop="0dp";
                  layout_marginLeft="4%w";
                  {
                    TextView;--纽扣控件
                    text=内容;
                    textSize='17sp';--文字大小
                    textColor='#F3525252';--文字颜色
                    backgroundColor='#FFFFFFFF';--纽扣背景颜色
                    layout_width='68%w';--纽扣宽度
                    layout_height='155dp';--纽扣高度
                    gravity="center|left";
                  };
                }; --滚动结束



                {
                  Button,
                  layout_width="40%w",
                  layout_height="6%h",
                  layout_marginTop="-8%h";
                  layout_gravity="center";
                  text="立 即 升 级",
                  textSize="15sp";
                  textColor="#ffffff";
                  id="gx",
                },

              };
            }; --卡片线性布局结束
          };--卡片布局结束

          {
            ImageView;
            src="qx.png",
            layout_gravity="center";
            layout_marginTop="3%h";
            ColorFilter=0xFFffffff,
            id="qx";
          };
        };




        dialog= AlertDialog.Builder(this)
        import "android.text.SpannableString"
        import "android.text.style.ForegroundColorSpan"
        import "android.text.Spannable"
        dialog1=dialog.show()
        --点击外部不消失
        dialog1.setCanceledOnTouchOutside(false);
        --点击返回键无响应
        dialog1.setCancelable(false);

        dialog1.getWindow().setContentView(loadlayout(lay));

        import "android.graphics.drawable.ColorDrawable"
        dialog1.getWindow().setBackgroundDrawable(ColorDrawable(0x00000000));




        function 揭露动画(时间)

          t=Ticker()
          t.Period=0
          t.start()
          t.onTick=function()
            t.stop()
            animator = ViewAnimationUtils.createCircularReveal(dc,a.getWidth()/2.5,0,0,Math.hypot(a.getWidth(),a.getHeight()));
            animator.setInterpolator(AccelerateInterpolator());
            animator.setDuration(时间);
            animator.start();

          end


          --[[  hh=Ticker()
          hh.Period=时间+时间/5
          hh.start()
          hh.onTick=function()
            hh.stop()
            animator = ViewAnimationUtils.createCircularReveal(a,dc.getWidth()/2.5,0,Math.hypot(a.getWidth(),a.getHeight()),0);
            animator.setInterpolator(AccelerateInterpolator());
            animator.setDuration(时间);
            animator.start();
          end

          hg=Ticker()
  hg.Period=时间+时间+时间/5
  hg.start()
  hg.onTick=function()
    hg.stop()
    --a.setVisibility(View.GONE)
    dialog1.dismiss()
  end]]
        end
        揭露动画(2000)
      end
      动画测试()





      import "android.graphics.drawable.ColorDrawable"
      dialog1.getWindow().setBackgroundDrawable(ColorDrawable(0x00000000));

      function CircleButton(view,radiu,InsideColor,半圆)
        import "android.graphics.drawable.GradientDrawable"
        drawable = GradientDrawable()
        drawable.setShape(GradientDrawable.RECTANGLE)
        drawable.setColor(InsideColor)
        drawable.setCornerRadii({半圆,radiu,半圆,radiu,radiu,radiu,radiu,radiu});
        view.setBackgroundDrawable(drawable)
      end
      CircleButton(gx,360,0xFF6CA5FE,360)



      gx.onClick=function()
加载网页("https://gitee.com/tc0692/dhtcq/tree/master/dehongtongchengquan.apk")   
--   this.startActivity(Intent(Intent.ACTION_VIEW,Uri.parse(链接)))
          --  dialog1.dismiss()
      end

      qx.onClick=function()
        dialog1.dismiss()
      end




    else
      -- 提示("当前已是最新版本！")
    end
  end
  Http.get(url,nil,"UTF-8",nil,function(code,content,cookie,header)
    if(code==200 and content)then
      过滤(content)
    else
      提示("本地网络或服务器异常  "..code)
    end
  end)
end

检测更新("https://gitee.com/tc0692/dhtcq/tree/master/vv.txt")
--end)
